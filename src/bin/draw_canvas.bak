// bin/draw_canvas.c
#include <furi.h>
#include <gui/canvas.h>
#include <gui/view.h>
#include <gui/elements.h>
#include <notification/notification_messages.h>

#include "../assets/assets_icons.h"
#include "../lib/draw_canvas.h"
#include "../lib/battery_info.h"

// Define the current window variable
WindowType current_window = WindowStatus;
BatteryInfo* battery_info = NULL;

void draw_callback(Canvas* canvas, void* ctx) {
    UNUSED(ctx);
    canvas_clear(canvas);

    switch(current_window) {
        case WindowStatus: {
            // Draw the status bar background
            canvas_set_color(canvas, ColorWhite);
            canvas_draw_box(canvas, 0, 0, canvas_width(canvas), 14);

            // Draw the border around the status bar
            canvas_set_color(canvas, ColorBlack);
            canvas_draw_frame(canvas, 0, 0, canvas_width(canvas), 14);

            // Draw the status bar text
            canvas_set_font(canvas, FontSecondary);
            canvas_set_color(canvas, ColorBlack);
            canvas_draw_str(canvas, 2, 10, "Status Bar");

            // Initialize battery information if not already done
            if(!battery_info) {
                battery_info = battery_info_alloc();
            }

            // Prepare battery data
            BatteryInfoModel battery_data = {
                .vbus_voltage = 0,         // Populate with real data
                .gauge_voltage = 0,        // Populate with real data
                .gauge_current = 0,        // Populate with real data
                .gauge_temperature = 0,    // Populate with real data
                .charging_voltage = 4.2f,  // Populate with real data
                .charge = 100,             // Populate with real data
                .health = 100              // Populate with real data
            };

            // Set and draw the battery information
            battery_info_set_data(battery_info, &battery_data);
            view_free(battery_info_get_view(battery_info), canvas); //view_draw

            break;
        }
        case WindowEmpty:
            canvas_set_font(canvas, FontSecondary);
            canvas_set_color(canvas, ColorBlack);
            canvas_draw_str(canvas, canvas_width(canvas) / 2 - 30, canvas_height(canvas) / 2, "Empty Window");
            break;

        case WindowAbout:
            canvas_set_font(canvas, FontSecondary);
            canvas_set_color(canvas, ColorBlack);
            canvas_draw_str(canvas, 10, 20, "About Me");
            canvas_draw_str(canvas, 10, 40, "Created by blmvxer");
            break;

        default:
            canvas_set_font(canvas, FontSecondary);
            canvas_set_color(canvas, ColorBlack);
            canvas_draw_str(canvas, canvas_width(canvas) / 2 - 30, canvas_height(canvas) / 2, "Unknown Window");
            break;
    }
}

// Clean up the BatteryInfo object
void cleanup_battery_info() {
    if(battery_info) {
        battery_info_free(battery_info);
        battery_info = NULL;
    }
}
